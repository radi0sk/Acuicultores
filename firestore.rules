
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // --- Helper Functions ---
    function isUserAuthenticated() {
      return request.auth != null;
    }

    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    // --- User Profiles ---
    match /users/{userId} {
      allow read: if isUserAuthenticated();
      allow create: if isOwner(userId);
      allow update: if isOwner(userId);
      allow delete: if false;

      // Professional Sub-profile
      match /professionalProfile/{profileId} {
        allow read: if isUserAuthenticated();
        allow create, update: if isOwner(userId);
      }
    }
    
    // --- Collection Group for Professional Profiles ---
    match /{path=**}/professionalProfile/{profileId} {
      allow list: if isUserAuthenticated();
    }
    

    // --- Products (Marketplace) ---
    match /products/{productId} {
      allow read: if true;
      allow list: if true;
      allow create: if isUserAuthenticated() && request.resource.data.sellerId == request.auth.uid;
      allow update: if isUserAuthenticated() && isOwner(resource.data.sellerId);
      allow delete: if isUserAuthenticated() && isOwner(resource.data.sellerId);
    }

    // --- Forum Posts ---
    match /forumPosts/{postId} {
      allow read: if true;
      allow list: if true;
      allow create: if isUserAuthenticated();
      allow update: if isUserAuthenticated();

      // Comments on Forum Posts
      match /comments/{commentId} {
        allow read: if true;
        allow list: if true;
        allow create: if isUserAuthenticated();
      }
    }

    // --- Publications (Knowledge Center & News) ---
    match /publications/{publicationId} {
      allow read: if resource.data.status == 'published' || (isUserAuthenticated() && isOwner(resource.data.authorId));
      allow list: if isUserAuthenticated();
      allow create: if isUserAuthenticated();
      // Allow update for owners, and for liking/commenting
      allow update: if isUserAuthenticated() && 
                      (isOwner(resource.data.authorId) || request.resource.data.diff(resource.data).hasAny(['likes', 'likedBy', 'commentsCount']));

      // Comments on Publications
      match /comments/{commentId} {
        allow read: if true;
        allow list: if true;
        allow create: if isUserAuthenticated();
      }
    }
    
    // --- Publication Suggestions Collection ---
    match /publicationSuggestions/{suggestionId} {
      allow get: if isUserAuthenticated() && (isOwner(resource.data.publicationAuthorId) || isOwner(resource.data.suggesterId));
      allow list: if isUserAuthenticated() && request.query.publicationAuthorId == request.auth.uid;
      allow create: if isUserAuthenticated() && request.resource.data.suggesterId == request.auth.uid;
      allow update: if isUserAuthenticated() && isOwner(resource.data.publicationAuthorId);
    }

    // --- Notifications ---
    match /notifications/{notificationId} {
      allow read, update: if isUserAuthenticated() && isOwner(resource.data.userId);
      allow list: if isUserAuthenticated() && request.query.userId == request.auth.uid;
      allow create: if isUserAuthenticated(); // Can be created by server or other users
    }
    
    // --- Conversations (Messaging) ---
    match /conversations/{conversationId} {
        allow read, create: if isUserAuthenticated() && request.auth.uid in resource.data.participantIds;
        allow update: if isUserAuthenticated() && request.auth.uid in resource.data.participantIds;
        
        match /messages/{messageId} {
            allow read, create: if isUserAuthenticated() && request.auth.uid in get(/databases/$(database)/documents/conversations/$(conversationId)).data.participantIds;
        }
    }

    // --- Library Contributions ---
    match /libraryContributions/{contributionId} {
      // Admin can do anything
      allow read, write: if request.auth.uid == 'ovPIwCma4pcnWk9RnCF4GQEhfJm2';
      // Authenticated users can create
      allow create: if isUserAuthenticated() && request.resource.data.contributorId == request.auth.uid;
      // Authenticated users can read approved documents
      allow list, get: if isUserAuthenticated() && resource.data.status == 'approved';
    }
  }
}
